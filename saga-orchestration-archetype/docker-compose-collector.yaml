version: '3.9'
services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_ENABLE_KRAFT=no
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=LISTENER_SEVICE://:9092,LISTENER_KAFDROP://kafka:29092
      - KAFKA_ADVERTISED_LISTENERS=LISTENER_SEVICE://localhost:9092,LISTENER_KAFDROP://kafka:29092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP= LISTENER_SEVICE:PLAINTEXT, LISTENER_KAFDROP:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME= LISTENER_SEVICE
      #- KAFKA_LISTENERS=PLAINTEXT://:9092
      #- KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
##########################################################################     
#kafdrop service
##########################################################################           
  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
    depends_on:
      - kafka
      - zookeeper
##########################################################################
  postgres_db:
    container_name: postgresdb
    restart: always
    image: postgres:latest
    ports:
        - 3432:5432
    volumes:
        #allow *.sql, *.sql.gz, or *.sh and is execute only if data directory is empty
        - ./dbfiles:/docker-entrypoint-initdb.d
        - postgres_data:/var/lib/pgsql/data/pgdata
        #- ./../postgres_data:/var/lib/postgresql/data        
        #- /var/lib/postgres_data:/var/lib/postgresql/data
    environment:
        #default postgres super user
        POSTGRES_USER: postgres
         #default passwor for postgres super user, it is only the required envvar for postgres image
        POSTGRES_PASSWORD: postgrespw
        #main database if name is not specific thname of super user is use
        POSTGRES_DB: re2dbc_db

##########################################################################     
#dbeaver service
########################################################################## 
  
  dbeaver:
    image: dbeaver/cloudbeaver
    restart: always
    ports:
      - 8978:8978
    depends_on:
      - postgres_db
      
##########################################################################     
#jaeger service
##########################################################################
  jaeger:
    #container_name: jaeger-service
    image: "jaegertracing/all-in-one:latest" ##1.125
    ports:
        - "16686:16686"
        - "14268:14268"
        - "14250:14250"
        #- "4318:4318" 
    #environment:
        #- COLLECTOR_OTLP_ENABLED=true
  otel-collector:
    #container_name: collector-jaeger-service
    image: otel/opentelemetry-collector:latest
    command: [ "--config=/etc/otel-collector-config.yaml" ]
    volumes:
        - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml:Z
    ports:
        - "13133:13133" 
        - "4317:4317"   
        - "4318:4318"   
    depends_on:
             - jaeger         
volumes:
  postgres_data:
     driver: local
        