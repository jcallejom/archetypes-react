version: '3.8'
services:
##########################################################################     
#database service for keycloak
##########################################################################       
  postgres_db2:
    container_name: postgres_db2
    restart: always
    image: postgres:latest
    ports:
        - 3432:5432
    volumes:
        #allow *.sql, *.sql.gz, or *.sh and is execute only if data directory is empty
        - ./dbfiles:/docker-entrypoint-initdb.d
        - ./../../../postgres_data_k:/var/lib/pgsql/data/pgdata
        #- ./../postgres_data:/var/lib/postgresql/data        
        #- /var/lib/postgres_data:/var/lib/postgresql/data
    environment:
        #default postgres super user
        POSTGRES_USER: keycloak
         #default passwor for postgres super user, it is only the required envvar for postgres image
        POSTGRES_PASSWORD: keycloakpw
        #main database if name is not specific thname of super user is use
        POSTGRES_DB: keycloak
    networks:
     - kraken-net        
##########################################################################     
 #keycloack Server 
##########################################################################  
  keycloak_web:
    image: docker.io/bitnami/keycloak:22.0.3-debian-11-r14
    container_name: keycloak_web
    environment:
      #KEYCLOAK_DATABASE_SCHEMA: public
      #KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KEYCLOAK_DATABASE_HOST: postgres_db2
      KEYCLOAK_DATABASE_NAME: keycloak      
      KEYCLOAK_DATABASE_USER: keycloak
      KEYCLOAK_DATABASE_PASSWORD: keycloakpw

      KC_HOSTNAME: localhost:8088
      #KC_HOSTNAME: keycloak_web:8080
      #KC_HOSTNAME: host.docker.internal:8088
      KC_HOSTNAME_BACKCHANNEL_DYNAMIC: true
     # KC_HOSTNAME_STRICT: false
      #KC_HOSTNAME_STRICT_HTTPS: false
      
      KEYCLOAK_LOG_LEVEL: info
      KEYCLOAK_ENABLE_STATISTICS: true
      KEYCLOAK_ENABLE_HEALTH_ENDPOINTS: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    #command: start-dev
    depends_on:
      - postgres_db2
    ports:
      - 8088:8080
    #healthcheck:
      #test: "curl -f http://localhost:8088/health/ready || exit 1"
    networks:
      - kraken-net      
##########################################################################     
#openldap Server 
##########################################################################     
  openldap:
    image: osixia/openldap:1.5.0
    container_name: openldap
    environment:
      - LDAP_ORGANISATION="Main Company Inc."
      - LDAP_DOMAIN=maincompany.com
    ports:
      - "389:389"
    networks:
      - kraken-net  
##########################################################################     
#openldap client 
########################################################################## 
  phpldapadmin:
    image: osixia/phpldapadmin:0.9.0
    container_name: phpldapadmin
    environment:
      - PHPLDAPADMIN_LDAP_HOSTS=openldap
    ports:
      - "6443:443"
    depends_on:
      - openldap
    networks:
      - kraken-net   
##########################################################################     
 #dbeaver client
 ##########################################################################       
  dbeaver:
    image: dbeaver/cloudbeaver
    restart: always
    ports:
      - 8978:8978
    volumes: 
       - ./../../../cloudbeaver_data:/opt/cloudbeaver/workspace    
    depends_on:
      -  oracle21xe-composite
    networks:
      - kraken-net    
##########################################################################     
 #krakend Server 
##########################################################################
  krakend-composite:
    image: devopsfaith/krakend
    container_name: krakend-composite
    command: run -d -c /etc/krakend/krakend.json
    ports:
      - "8090:8090"
    volumes:
      - ./../krakend/krakend.json:/etc/krakend/krakend.json
    healthcheck:
      test: "curl -f http://localhost:8090/__health || exit 1"
    networks:
      - kraken-net      
##########################################################################     
#database service
##########################################################################       
  oracle21xe-composite:
    #image: container-registry.oracle.com/database/express:latest
    image: container-registry.oracle.com/database/express:latest
    container_name: oracle21xe-composite
    restart: always
    ports:
      - 1521:1521
      - 5500:5500
    environment:
    #Sid database
    #- ORACLE_SID=sorteo
    #optional this is default user 
    - ORACLE_PDB=oracleuser
    # optional change user SYSTEM password 
    - ORACLE_PWD=oraclepw
    volumes:
        #allow *.sql, *.sql.gz, or *.sh and is execute only if data directory is empty
        - ./dbfiles:/docker-entrypoint-initdb.d
        - ./dbfiles/setup:/opt/oracle/scripts/setup
        - ./../../../oracle_data_api:/opt/oracle/oradata
        #- ./../oracle_data:/u01/app/oracle/oradata
    networks:
      - kraken-net
##########################################################################     
#database service PL
##########################################################################       
#oracle21xe_db2:
#    image: container-registry.oracle.com/database/express:latest
#    container_name: oracle21cxe2
#    restart: always
#    ports:
#      - 1531:1521
#      - 3500:5500
#    environment:
#    #Sid database
#    #- ORACLE_SID=sorteo
#    #optional this is default user 
#    - ORACLE_PDB=oracleuser
#    # optional change user SYSTEM password 
#    - ORACLE_PWD=oraclepw
#    volumes:
#        #allow *.sql, *.sql.gz, or *.sh and is execute only if data directory is empty
#        - ./dbfiles:/docker-entrypoint-initdb.d
#        - ./../../../oracle_data2:/opt/oracle/oradata
#        #- ./../oracle_data:/u01/app/oracle/oradata
#    networks:
#      - kraken-net                                       
####
###
###
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
      - 9000:9000
      - 9443:9443
      - 8000:8000 # Optional, for Edge Agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/localtime:/etc/localtime:ro
      - ./../../../portainer_data:/data
    networks:
      - kraken-net 
volumes:
  oracle_data_api:
    driver: local    
  postgres_data_k:
    driver: local
  cloudbeaver_data:
    driver: local
  oracle_data2:
    driver: local
  portainer_data:
    driver: local    
networks:
  kraken-net:
    name: kraken-net
    driver: bridge