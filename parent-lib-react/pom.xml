<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.archetype</groupId>
  <artifactId>parent-lib-react</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>${project.artifactId}</name>


  <description>POM parent project for all newsop projects</description>  
  
  <properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven.compiler.source>21</maven.compiler.source>
		<maven.compiler.target>21</maven.compiler.target>
		<java.version>21</java.version>
		<!-- quitar-->
		<spring-boot.version>3.2.5</spring-boot.version>
		<lombok.version>1.18.32</lombok.version>
		<mapstruct.version>1.5.3.Final</mapstruct.version>
		<!-- quitar fin-->
		<validation.version>3.1.0-M2</validation.version>
		<swagger-v3-openapi.version>2.6.0</swagger-v3-openapi.version>
	</properties>   
  
  <dependencyManagement>
		<dependencies>
			
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		<!--open api resources  -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webflux-ui</artifactId>
            <version>${swagger-v3-openapi.version}</version>
        </dependency>	
		<dependency>
		    <groupId>org.mapstruct</groupId>
		    <artifactId>mapstruct</artifactId>
		    <version>${mapstruct.version}</version>
		</dependency>		

	</dependencies>
  </dependencyManagement>
  <dependencies>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.mapstruct</groupId>
		    <artifactId>mapstruct</artifactId>
		</dependency>	                      
       <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <!--If want exclude junit4 and use only junit5-->
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>   
  </dependencies> 
         
    <build>
        <plugins>
           <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.12</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                                    
                </configuration>
            </plugin>
            <!--This plugin generate reports in two differents forma .txt and xml 
            in test phase when build life cicle is execuite-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.5.2</version>
                <configuration>
                    <useSystemClassLoader>@{argLine} false</useSystemClassLoader>
                  <!--  <argLine>@{argLine} -Djdk.net.URLClassPath.disableClassPathURLCheck=true</argLine>-->
                    <argLine>@{argLine} -Djava.security.egd=file:/dev/./urandom</argLine>
                </configuration>
            </plugin>

            <!--It is the spring-boot repackage goal that repackages the JAR produced 
            by maven to specify the main class and make it executable using an embedded container-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>     
                <version>${spring-boot.version}</version>      
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>  
           
             
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <!-- <version>3.9.1</version>-->
                 <version>4.0.0-M16</version>
                <configuration>
                    <locales>en,fr,es</locales>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.6.3</version>
                <!-- <version>3.2.0</version>-->   
                <configuration>                   
                </configuration> 
            </plugin>
            <!--generate project code documentation-->
          <!--  <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.9</version>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <additionalparam>${javadoc.opts}</additionalparam>
                        </configuration>
                    </execution>
                </executions>
            </plugin>-->
               <!--generate maven site documentation-->
          <!--  <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.9.1</version>    
                <configuration>
                    <locales>es,es</locales>
                </configuration>    
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <additionalparam>${javadoc.opts}</additionalparam>
                        </configuration>
                    </execution>
                </executions>
            </plugin>-->
           	
        </plugins>
    </build>
<!--
  <distributionManagement>
        <repository>
            <id>commons-librarys-repository</id>
            <name>/commons-librarys-repository</name>
            <url>https://jfrog-io.infra.ocp.once.org/artifactory/commons-librarys-mvn-release-virtual/</url>
        </repository>

	   	<snapshotRepository>
            <id>commons-librarys-repository-snapshot</id>
            <name>/commons-librarys-repository-snapshot</name>
            <url>https://jfrog-io.infra.ocp.once.org/artifactory/commons-librarys-mvn-snapshot-virtual/</url>        
	   	</snapshotRepository>
	</distributionManagement>
	-->
</project>
